@h3 JPA vs Spring Data JPA vs Hibernate
@link https://docs.spring.io/spring-framework/reference/data-access/orm.html
@link https://stackoverflow.com/questions/23862994/whats-the-difference-between-hibernate-and-spring-data-jpa

---

@h3 Steps to use Spring Data JPA
@startpre
1 - Initialize following (via XML or Annotations):
    1 - DataSource
    2 - HibernateJpaVendorAdapter
    3 - PersistenceExceptionTranslationPostProcessor

2 - For Hibernate Session initialize following (via XML or Annotations):
    1 - LocalSessionFactoryBean by injecting DataSource bean 

3 - For JPA Repositories initialize following (via XML or Annotations):
    1 - LocalContainerEntityManagerFactoryBean by injecting DataSource, HibernateJpaVendorAdapter
    2 - JPA Properties
        1 - hibernate.dialect
        2 - hibernate.hbm2ddl.auto, etc.

4 - For Transactions initialize following (via XML or Annotations):
    1 - JpaTransactionManager by injecting LocalContainerEntityManagerFactoryBean (getObject)

5 - Define JPA Entities & Relationships (via XML or Annotations)
@endpre

---
@h3 Spring Data JPA with Hibernate Examples

@h4 Simple JPA Demo Program
@link https://github.com/anikettrivedi/java-spring/tree/main/spring-core/src/main/java/com/example/springjpa/jpasimple

@h4 One to Many JPA Demo Program
@ol One to Many Table Mapping/Hibernate Session/Hibernate Transactions
@link https://github.com/anikettrivedi/java-spring/tree/main/spring-core/src/main/java/com/example/springjpa/jpaonetomany

@h4 TODO: JPA One to One
@h4 TODO: JPA Many to Many

---

@h3 Spring Data JPA Dependencies & Sample Configs

@h4 Gradle
@starttextarea
implementation "org.springframework.data:spring-data-jpa:3.1.3"
implementation 'org.hibernate:hibernate-core:6.1.4.Final'
implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
@endtextarea

@h4 XML Config
@starttextarea
<bean id="myEmf" 
  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="packagesToScan" value="com.baeldung.persistence.model" />
    <property name="jpaVendorAdapter">
        <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
    </property>
    <property name="jpaProperties">
        <props>
            <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
            <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
        </props>
    </property>
</bean>

<bean id="dataSource" 
  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
    <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
    <property name="url" value="jdbc:mysql://localhost:3306/spring_jpa" />
    <property name="username" value="tutorialuser" />
    <property name="password" value="tutorialmy5ql" />
</bean>

<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="myEmf" />
</bean>
<tx:annotation-driven />

<bean id="persistenceExceptionTranslationPostProcessor" class=
  "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
@endtextarea